generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id    String @id @default(cuid())
  name  String @unique
  users User[]

  @@map("roles")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  roleId    String
  status    String
  phone     String?   // <-- campo opcional para telÃ©fono
  createdAt DateTime @default(now())

  role      Role     @relation(fields: [roleId], references: [id])
  assignedJobs  Job[]   @relation("AssignedTo")
  createdJobs   Job[]   @relation("CreatedBy")
}

model Client {
  id        String   @id @default(cuid())
  name      String
  email     String?  @unique
  phone     String
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  jobs Job[]

  @@map("clients")
}

model Service {
  id          String  @id @default(cuid())
  name        String  @unique
  category    String? 
  description String?
  price       Float?

  // Relations
  jobs Job[]

  @@map("services")
}

model Job {
  id          String    @id @default(cuid())
  title       String
  description String?
  status      JobStatus @default(PENDING)
  priority    Priority  @default(MEDIUM)
  scheduledAt DateTime?
  completedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Foreign Keys
  clientId     String
  serviceId    String
  assignedToId String?
  createdById  String

  // Relations
  client     Client  @relation(fields: [clientId], references: [id])
  service    Service @relation(fields: [serviceId], references: [id])
  assignedTo User?   @relation("AssignedTo", fields: [assignedToId], references: [id])
  createdBy  User    @relation("CreatedBy", fields: [createdById], references: [id])
  images     Image[]

  @@map("jobs")
}

model Image {
  id        String   @id @default(cuid())
  url       String
  publicId  String? // For Cloudinary
  jobId     String
  createdAt DateTime @default(now())

  // Relations
  job Job @relation(fields: [jobId], references: [id], onDelete: Cascade)

  @@map("images")
}

enum JobStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}
